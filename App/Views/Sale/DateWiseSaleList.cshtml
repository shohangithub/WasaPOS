@model IEnumerable<Model.Entities.Sale>
@{
    ViewBag.Title = "DateWiseSaleList";
    string CurrentDate = DateTime.Now.ToString("yyyy-MM-dd ");
}

<div class="col-xs-12">
    <form class="form-horizontal" role="form">
        <div class="widget-box">
            <div class="widget-header">
                <h4 class="widget-title">Date Wise Account List</h4>
            </div>
            <div class="widget-body">
                <div class="widget-main">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="col-sm-3 control-label no-padding-right" for="fromdate"> From Date</label>
                                <div class="col-sm-9">
                                    <div class='input-group date fromdate' id='fromdate'>
                                        <input type="text" class="form-control" value="@CurrentDate" name="fromdate" id="F_date">
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                           

                            <div class="form-group">
                                <div class="col-sm-3 col-sm-offset-9">
                                    <input type="button" id="dateSearch" class="btn-search" value="Search" />
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        
    </form>
    <div class="table-header btn-custom">
        Results for "Records List"
    </div>


    <table id="dynamic-table" class="table table-striped table-bordered table-hover">
        <thead>
            <tr >
                <th>Date</th>
                <th>Invoice No </th>
                <th>Customer Name </th>

                <th>Total</th>
                <th>Paid</th>
                <th>Where SD</th>
                <th>Vat</th>
                <th>Discount In Parsent</th>
                <th>Discount Amount</th>
                <th>Due</th>
                <th>Action</th>

            </tr>
        </thead>

        <tbody>
            @if (Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr class="tbl-p">
                        <td>@Convert.ToDateTime(@item.SaleDate).ToString("dd-MM-yyy")</td>
                        <td>@item.InvoiceId</td>
                        <td>@item.Customer.CustomerName</td>

                        <td>@item.NetTotal</td>
                        <td>@item.CashReceive</td>
                        <td>@item.TSSD</td>
                        <td>@item.TSVat</td>
                        <td>@item.Discount</td>
                        <td>@item.DiscountAmount</td>
                        <td>@item.DueAmount</td>
                        <td>
                            <a class="green" href="@Url.Action("SaleEdit", "Sale", new { id = item.SaleId })">
                                <i class="ace-icon fa fa-pencil bigger-130"></i>
                            </a>

                            <a class="red" style="cursor:pointer" onclick="DeleteSale('@item.SaleId')">
                                <i class="ace-icon fa fa-trash-o bigger-130"></i>
                            </a>
                        </td>



                    </tr>
                }
            }
            else
            {
                <tr>
                    <td class="number" colspan="11"><h4>No Data Available!</h4></td>
                </tr>
            }


        </tbody>
    </table>

</div>
<script>
    $(document).ready(function () {
        $('#dynamic-table').DataTable();
    });
    $(function () {
        $('.fromdate').datetimepicker({
            format: 'YYYY-MM-DD'
        });
    });
    function DeleteSale(id) {
        if (confirm('Are you sure to delete the record?')) {
            var del_info = {
                "id": id
            };
            $.ajax({
                type: "POST",
                url: "/Sale/DeleteSale",
                data: JSON.stringify(del_info),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                cache: false,
                success: function (result) {
                    location.href = "/Sale/SaleList";

                },
                error: function () {

                }
            });
        }
    }
    $('#dateSearch').click(function () {

        var data = {
            fromdate: $('#F_date').val(),
        }
        $.ajax({
            url: '/Sale/DateWiseSaleList',
            type: "POST",
            data: JSON.stringify(data),
            cache: false,
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (d) {
                debugger
                $(".tbl-p").parent().remove();
                for (var i = 0; i < d.salelist.length; i++) {
                   
                    //open date convert start
                    var jsondate = d.salelist[i].SaleDate;
                    var a = jsondate.replace('/Date(', '');
                    var b = a.replace(')/', '');
                    var Odates = new Date(parseInt(b));
                    var SaleDate = Odates.getDate() + '-' + (Odates.getMonth() + 1) + '-' + Odates.getFullYear();
                    //open date convert end
                    var saleid = d.salelist[i].SaleId;
                    var td = '<tr class="tbl-p">' +
                        '<td>' + SaleDate + '</td >' +
                        '<td>' + d.salelist[i].InvoiceId + '</td >' +
                        '<td>' + d.salelist[i].CustomerName + '</td >' +
                        '<td>' + d.salelist[i].NetTotal + '</td >' +
                        '<td>' + d.salelist[i].CashReceive + '</td >' +
                        '<td>' + d.salelist[i].TSSD + '</td >' +

                        '<td>' + d.salelist[i].TSVat  + '</td >' +
                        '<td>' + d.salelist[i].Discount + '</td >' +
                        '<td>' + d.salelist[i].DiscountAmount + '</td >' +
                        '<td>' + d.salelist[i].DueAmount + '</td >' +
                        '<td>' +
                        
                        '<a class="green" href="/Sale/SaleEdit/' + saleid + '"><i class="ace-icon fa fa-pencil bigger-130"></i></a>' +
                        '<a class="red" style="cursor:pointer" onclick="DeleteSale(' + saleid + ')"><i class="ace-icon fa fa-trash-o bigger-130"></i></a>'
                        + '</td >' +
                        '</tr>';
                    $('tr').parent().append(td);
                }
            },
            error: function () {
                //alert('Error. Please try again.');
                //$('#submit').val('Save');
            }
        });
    });
   
</script>

