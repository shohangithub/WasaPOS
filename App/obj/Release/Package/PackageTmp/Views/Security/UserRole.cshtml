@model IList<Model.Entities.Tbl_UserRole>
@{
    ViewBag.Title = "User Role";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="col-sm-12 col-md-12 col-xs-12" role="main">
    <div class="col-md-12 col-sm-12 col-xs-12">
        <div class="x_panel">
            <div class="x_title">
                <h2>Add User Role <small>Create new Role</small></h2>
                <div class="clearfix"></div>
            </div>
            <div class="x_content" id="contactFormArea">
                <br />
                <form id="mainform" data-parsley-validate class="form-horizontal form-label-left">
                    <div class="form-group">
                        @Html.Hidden("RoleId")
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="first-name">
                            Name <span class="required">*</span>
                        </label>
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            @Html.TextBox("RoleName", null, new { @class = "form-control col-md-7 col-xs-12", required = "required" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-4">
                            <button type="button" class="btn btn-primary" id="updateBtn" onclick="UpdateUserRole()" disabled>Update</button>
                            <button type="button" class="btn btn-success" id="btnSubmit" onclick="SetUserRole()">Submit</button>
                        </div>
                    </div>
                </form>
            </div>

        </div>
    </div>
            <div class="row">
                <div class="col-xs-12">

                    <div class="clearfix">
                        <div class="pull-right tableTools-container"></div>
                    </div>
                    <div class="table-header btn-custom">
                        Existing Role
                    </div>

                    <div id="after_create">
                        <table id="dynamic-table" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>Role ID</th>
                                    <th>Role Name</th>
                                    <th>Action</th>
                                </tr>
                            </thead>

                            <tbody>
                                @if (Model.Count() > 0)
                                {
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@item.RoleId</td>
                                            <td>@item.RoleName</td>
                                            <td>
                                                <a class="green" style="cursor:pointer" onclick="Edit('@item.RoleId','@item.RoleName')">
                                                    <i class="ace-icon fa fa-pencil bigger-130"></i>
                                                </a>
                                                <a class="red" style="cursor:pointer" onclick="DeleteUserRole('@item.RoleId')">
                                                    <i class="ace-icon fa fa-trash-o bigger-130"></i>
                                                </a>
                                            </td>

                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td class="number" colspan="6"><h4>No Data Available!</h4></td>
                                    </tr>
                                }


                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            
        </div>
@section scripts{
 <script>
    function SetUserRole() {
        var RoleName = $("#RoleName").val();

        if (RoleName == "") {
            alert("Role Name is required.");
        }
        else if (RoleName.length < 2 || RoleName.length > 20) {
            alert("Role Name length between 2 and 20 characters");
        }
        else if (!isNaN(RoleName)) {
            alert('Must input Role Name using letter!');
        }
        else {
            var data = {
                RoleName: RoleName,
            };
            $.ajax({
                type: "POST",
                url: "../Security/AddUserRole",
                data: JSON.stringify(data),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                cache: false,
                success: function (data, textStatus, jqXHR) {
                    alert(data.message);
                    window.location.reload();
                },
                error: function () {
                    alert('Role Create Operation Failed!');
                }
            });
        }
    }
</script>
<script>
    function Edit(id, value1) {
        $("#RoleId").val(id);
        $("#RoleName").val(value1);
        $("#btnSubmit").attr("disabled", true);
        $("#updateBtn").attr("disabled", false);  
    }
</script>
<script>
    function UpdateUserRole() {
        debugger
        var RoleId = $("#RoleId").val();
        var RoleName = $("#RoleName").val();

        if (RoleName == "") {
            alert("Role Name is required");
        }
        else if (RoleName.length < 2 || RoleName.length > 20) {
            alert("Role Name length between 2 and 20 characters");
        }
        else if (!isNaN(RoleName)) {
            alert('Must input Role Name using letter!');
        }
        else {
            var data = {
                RoleId: RoleId,
                RoleName: RoleName
            };
            $.ajax({
                type: "POST",
                url: "../Security/UpdateUserRole",
                data: JSON.stringify(data),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                cache: false,
                success: function (data) {
                    alert(data.message);
                    $("#dialogSupplier").dialog('close');
                    $("#RoleId").val("");
                    $("#RoleName").val("");
                    window.location.reload();
                },
                error: function () {
                    alert('Updated Failed!');
                }
            });
        }
    }
</script>
<script>
    function DeleteUserRole(RoleId) {
        if (confirm('Are you sure to delete record?')) {
            var data = {
                RoleId: RoleId
            };
            //alert(id);
            $.ajax({
                type: "POST",
                url: "../Security/DeleteUserRole",
                data: JSON.stringify(data),
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                cache: false,
                success: function (data, textStatus, jqXHR) {
                    alert(data.message);
                    //$('#after_create').load('@Url.Action("UserRoleList", "Security")');
                    $("#setoffice").show();
                    $("#updateoffice").hide();
                    window.location.reload();
                },
                error: function () {
                    $("#setoffice").show();
                    $("#updateoffice").hide();
                    alert('Deleted Failed!');
                }
            });
        }
    }
</script>
}





